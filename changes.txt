May 5, 2025
  updating postprocessing to not have rn6 as fasta directory in bean

Feb 07, 2025
  ClinVar2Vcf: added microsatellite to list of variant types processed by the pipeline

Dec 16, 2024
  rewrote ClinVar2Vcf

July 26, 2024
updating "Variant" data source to "Carpe". Both are using same Variant tables

Jan 24, 2024
reverting postporcessing changes because Logan found the a bug in the HRDP pipeline

Jan 22, 2024
VariantPostProcessing: updated for exons that begin in/out-side of a gene per RGDD-2076

Feb 09, 2022
  Clinvar2Vcf: added export of RS ids in INFO field: f.e. 'DB:rs549559726'

Jul 28, 2021
  VariantLoader3: implemented updates of ZYGOSITY_POSS_ERROR

Jul 12, 2021
  VariantLoader3: updated for efficient loading on chromosome basis from common format files

Jul 9, 2021
  VariantLoader3: updated for efficient loading on chromosome basis from common format files

Jul 7, 2021
  patched VcfToCommonFormatConverter

May 7, 2019
  VARIANT_HUMAN renamed to VARIANT_CLINVAR, VARIANT_TRANSCRIPT_HUMAN renamed to VARIANT_TRANSCRIPT_CLINVAR

Dec 19, 2018
  clinvar module updated: table renamed from VARIANTS to CLINVAR
  polyphen module: updated to new sequence API

Oct 1, 2018
  moved from subversion to github

Aug 24, 2018
  Polyphen: fixed code for retrieving protein sequences

May 16, 2018
  fixed PolyphenLoader: when matching polyphen results with polyphen.info file, it must use column 'o_pos' (column 2)
    instead of column 'pos' (column 7); otherwise it will be impossible to load the results into the database

Oct 26, 2017
  varload: single nucleotide variants gor VARIANT_TYPE='snv'; previously it was 'snp'

Aug 4, 2017
  added dbSnp2Vcf converter

Jun 14, 2017
  Vcf8ColToCommonFormatLoader: added support for multiple input files

Apr 13, 2017
  optimized variant loader to minimize nr of queries to database

Apr 12, 2017
  updated converters to common format: implemented automatic chromosome conversion from refseq nucleotides to chromosome numbers
     f.e. 'NC_005100.4' --> '1'

Nov 28, 2016
  updated VariantPostProcessing for ClinVar processing to use VARIANT_HUMAN and VARIANT_TRANSCRIPT_HUMAN tables
  updated VcfToCommonFormat2: dbSnpSource cmdline param is no longer needed since dbSnpSource will be derived from mapKey

Oct 27, 2016
  updated ConservationScore loader

Sep 7, 2016
  added ClinVar2Vcf Converter

Jul 10, 2015
  added ConservationScoreLoader to load phastCons conservation scores for rn5

Jan 26, 2015
  VcfToCommonFormat2Converter: new cmdline option --compressOutputFile
    if present, the output files are gzipped on the fly

Nov 20, 2014
  VariantLoad3 optional parameter 'logFileName', so you can replace 'variantIlluminaLoad' with user-provided log name

Nov 19, 2014
  VariantLoad3 fixed and optimized

Nov 17, 2014
  VcfToCommonFormat2Converter: fix in computation of allele_count field for a variant with 2+ alleles
  VariantPostProcessing: fix in computing genic status

Oct 10, 2014
  created Vcf8ColToCommonFormat2Converter to convert vcf files in 8-col format into common format 2

Sep 17, 2014
  Polyphen: updated polyphen scripts

Sep 16, 2014
  VcfToCommonFormat2Converter: created converter of VCF data to new common-format-2 (to simplify input data)
  VariantLoader3: merged code of VariantLoader2 & LoadZygosityDepth, input must be in common-format-2
  VariantPostProcessing: mapKey and dbSnpBuild are read directly from database (table SAMPLE)
    instead of being passed via cmdline -- less chances for error

Sep 10, 2014
  VariantLoader2: added cmdline parameter --verifyIfInRgd
    default: false    variants are loaded as they are in incoming data, without verification
    if true: incoming variant is inserted only if it is not in RGD


Jan 15, 2014
------------
PolyphenLoader update: polyphen results with swapped AA residues (ref_aa swapped with var_aa for computations)
   are excluded from loading because they are out of place
   (chromosome reference sequence differs from transcript nucleotide sequence)


Nov 22, 2013
------------
variantPostProcessing v 1.0.1 - fixed code with miscalculation of AA codon
 -added qc to validate EXONic rows in VARAINT_TRANSCRIPT table
 -change in computation of synonymous status logic
  so far we had field SYN_STATUS could be one of (‘synonymous’,’nonsynonymous’,NULL)
  there will be a new value ‘unassignable’ – this will be set for EXONIC variants having problematic codons
  For example if the reference sequence codon is ‘NCT’ and variant codon is ‘NGT’ (N-stands for unknown nucleotide),
    they will be translated into ‘X’ (X-unknown amino acid). Since it is questionable if the mutation
    is synonymous or not, due to lack of data, it should be set to ‘unassignable’ to signal to the user
    that a mutation of unknown significance was detected in coding part of the gene.


Nov 13, 2013
-------------------------
finished code for the entire suite:
  conversion to common format, variant loading, zygosity computation, variant post processing
